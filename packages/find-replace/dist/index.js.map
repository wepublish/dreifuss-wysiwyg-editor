{"version":3,"file":"index.js","sources":["../src/defaults.ts","../src/getSearchHighlightDecorate.ts","../src/useFindReplacePlugin.ts"],"sourcesContent":["export const MARK_SEARCH_HIGHLIGHT = 'search_highlight'\n","import {Decorate, getPlatePluginOptions} from '@udecode/plate-core'\nimport {NodeEntry, Range, Text} from 'slate'\nimport {MARK_SEARCH_HIGHLIGHT} from './defaults'\nimport {DecorateSearchHighlightOptions} from './types'\n\nexport const getSearchHighlightDecorate =\n  ({search}: DecorateSearchHighlightOptions): Decorate =>\n  editor => {\n    const options = getPlatePluginOptions(editor, MARK_SEARCH_HIGHLIGHT)\n\n    return ([node, path]: NodeEntry) => {\n      const ranges: Range[] = []\n\n      if (search && Text.isText(node)) {\n        const {text} = node\n        const parts = text.toLocaleLowerCase().split(search.toLocaleLowerCase())\n\n        let offset = 0\n        parts.forEach((part, i) => {\n          if (i !== 0) {\n            ranges.push({\n              anchor: {path, offset: offset - search.length},\n              focus: {path, offset},\n              [options.type]: true\n            })\n          }\n          offset = offset + part.length + search.length\n        })\n      }\n\n      return ranges\n    }\n  }\n","import {Dispatch, SetStateAction, useMemo, useState} from 'react'\nimport {getRenderLeaf, PlatePlugin} from '@udecode/plate-core'\nimport {MARK_SEARCH_HIGHLIGHT} from './defaults'\nimport {getSearchHighlightDecorate} from './getSearchHighlightDecorate'\n\n/**\n * Supports search highlight.\n * TODO: replace\n */\nexport const useFindReplacePlugin = (): {\n  plugin: PlatePlugin\n  setSearch: Dispatch<SetStateAction<string>>\n} => {\n  const [search, setSearch] = useState('')\n\n  return {\n    plugin: useMemo(\n      () => ({\n        renderLeaf: getRenderLeaf(MARK_SEARCH_HIGHLIGHT),\n        decorate: getSearchHighlightDecorate({search})\n      }),\n      [search]\n    ),\n    setSearch\n  }\n}\n"],"names":["MARK_SEARCH_HIGHLIGHT","getSearchHighlightDecorate","search","editor","options","getPlatePluginOptions","node","path","ranges","Text","isText","text","parts","toLocaleLowerCase","split","offset","forEach","part","i","push","anchor","length","focus","type","useFindReplacePlugin","setSearch","useState","plugin","useMemo","renderLeaf","getRenderLeaf","decorate"],"mappings":";;;;;;;;MAAaA,qBAAqB,GAAG;;MCKxBC,0BAA0B,GACrC,CAAC;AAACC,EAAAA;AAAD,CAAD,KACAC,MAAM,IAAI;AACR,QAAMC,OAAO,GAAGC,+BAAqB,CAACF,MAAD,EAASH,qBAAT,CAArC;AAEA,SAAO,CAAC,CAACM,IAAD,EAAOC,IAAP,CAAD,KAA6B;AAClC,UAAMC,MAAe,GAAG,EAAxB;;AAEA,QAAIN,MAAM,IAAIO,UAAI,CAACC,MAAL,CAAYJ,IAAZ,CAAd,EAAiC;AAC/B,YAAM;AAACK,QAAAA;AAAD,UAASL,IAAf;AACA,YAAMM,KAAK,GAAGD,IAAI,CAACE,iBAAL,GAAyBC,KAAzB,CAA+BZ,MAAM,CAACW,iBAAP,EAA/B,CAAd;AAEA,UAAIE,MAAM,GAAG,CAAb;AACAH,MAAAA,KAAK,CAACI,OAAN,CAAc,CAACC,IAAD,EAAOC,CAAP,KAAa;AACzB,YAAIA,CAAC,KAAK,CAAV,EAAa;AACXV,UAAAA,MAAM,CAACW,IAAP,CAAY;AACVC,YAAAA,MAAM,EAAE;AAACb,cAAAA,IAAD;AAAOQ,cAAAA,MAAM,EAAEA,MAAM,GAAGb,MAAM,CAACmB;AAA/B,aADE;AAEVC,YAAAA,KAAK,EAAE;AAACf,cAAAA,IAAD;AAAOQ,cAAAA;AAAP,aAFG;AAGV,aAACX,OAAO,CAACmB,IAAT,GAAgB;AAHN,WAAZ;AAKD;;AACDR,QAAAA,MAAM,GAAGA,MAAM,GAAGE,IAAI,CAACI,MAAd,GAAuBnB,MAAM,CAACmB,MAAvC;AACD,OATD;AAUD;;AAED,WAAOb,MAAP;AACD,GArBD;AAsBD;;AC3BH;AACA;AACA;AACA;;MACagB,oBAAoB,GAAG,MAG/B;AACH,QAAM,CAACtB,MAAD,EAASuB,SAAT,IAAsBC,cAAQ,CAAC,EAAD,CAApC;AAEA,SAAO;AACLC,IAAAA,MAAM,EAAEC,aAAO,CACb,OAAO;AACLC,MAAAA,UAAU,EAAEC,uBAAa,CAAC9B,qBAAD,CADpB;AAEL+B,MAAAA,QAAQ,EAAE9B,0BAA0B,CAAC;AAACC,QAAAA;AAAD,OAAD;AAF/B,KAAP,CADa,EAKb,CAACA,MAAD,CALa,CADV;AAQLuB,IAAAA;AARK,GAAP;AAUD;;;;;;"}