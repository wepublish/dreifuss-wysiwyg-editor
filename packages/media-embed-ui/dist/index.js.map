{"version":3,"file":"index.js","sources":["../src/MediaEmbedElement/MediaEmbedElement.styles.ts","../src/MediaEmbedElement/MediaEmbedUrlInput.tsx","../src/MediaEmbedElement/MediaEmbedElement.tsx","../../../node_modules/@udecode/plate-media-embed/dist/index.es.js","../../../node_modules/rollup-plugin-styles/dist/runtime/inject-css.js","../src/MediaEmbedToolbar/MediaEmbedToolbar.tsx"],"sourcesContent":["import {createStyles} from '@udecode/plate-styled-components'\nimport {css} from 'styled-components'\nimport tw from 'twin.macro'\nimport {MediaEmbedElementProps} from './MediaEmbedElement.types'\n\nexport const getMediaEmbedElementStyles = (props: MediaEmbedElementProps) =>\n  createStyles(\n    {prefixClassNames: 'MediaEmbedElement', ...props},\n    {\n      root: tw`relative`,\n      iframeWrapper: [tw`relative`, tw`padding[75% 0 0 0]`],\n      iframe: [tw`absolute top-0 left-0 w-full h-full`],\n      input: [\n        tw`w-full`,\n        css`\n          padding: 0.5em;\n          font-size: 0.85em;\n          border: 2px solid #ddd;\n          background: #fafafa;\n          margin-top: 5px;\n        `\n      ]\n    }\n  )\n","import * as React from 'react'\nimport {CSSProp} from 'styled-components'\n\nexport const MediaEmbedUrlInput = ({\n  url,\n  onChange,\n  ...props\n}: {\n  className?: string\n  css?: CSSProp\n  url: string\n  onChange: Function\n}) => {\n  const [value, setValue] = React.useState(url)\n\n  const validateUrl = (newUrl: string) => {\n    // if not starting with http, assume pasting of full iframe embed code\n    if (newUrl.substring(0, 4) !== 'http') {\n      const regexMatchSrc = /src=\".*?\"/\n      const regexGroupQuotes = /\"([^\"]*)\"/\n\n      const src = newUrl.match(regexMatchSrc)?.[0]\n      const returnString = src?.match(regexGroupQuotes)?.[1]\n\n      if (returnString) {\n        newUrl = returnString\n      }\n    }\n    return newUrl\n  }\n\n  return (\n    <input\n      value={value}\n      onClick={e => e.stopPropagation()}\n      onChange={e => {\n        const newUrl = e.target.value\n        validateUrl(newUrl)\n        setValue(newUrl)\n        onChange(newUrl)\n      }}\n      {...props}\n    />\n  )\n}\n","import * as React from 'react'\nimport {setNodes} from '@udecode/plate-common'\nimport {TElement, useEditorRef} from '@udecode/plate-core'\nimport {MediaEmbedNodeData} from '@udecode/plate-media-embed'\nimport {ReactEditor} from 'slate-react'\nimport {getMediaEmbedElementStyles} from './MediaEmbedElement.styles'\nimport {MediaEmbedElementProps} from './MediaEmbedElement.types'\nimport {MediaEmbedUrlInput} from './MediaEmbedUrlInput'\n\nexport const MediaEmbedElement = (props: MediaEmbedElementProps) => {\n  const {attributes, children, element, nodeProps} = props\n\n  const editor = useEditorRef()\n  const {url} = element\n\n  const styles = getMediaEmbedElementStyles(props)\n\n  return (\n    <div {...attributes} css={styles.root.css} className={styles.root.className}>\n      <div contentEditable={false}>\n        <div css={styles.iframeWrapper?.css} className={styles.iframeWrapper?.className}>\n          <iframe\n            css={styles.iframe?.css}\n            className={styles.iframe?.className}\n            title=\"embed\"\n            src={`${url}?title=0&byline=0&portrait=0`}\n            frameBorder=\"0\"\n            {...nodeProps}\n          />\n        </div>\n\n        <MediaEmbedUrlInput\n          data-testid=\"MediaEmbedUrlInput\"\n          css={styles.input?.css}\n          className={styles.input?.className}\n          url={url}\n          onChange={(val: string) => {\n            const path = ReactEditor.findPath(editor, element)\n            setNodes<TElement<MediaEmbedNodeData>>(editor, {url: val}, {at: path})\n          }}\n        />\n      </div>\n      {children}\n    </div>\n  )\n}\n","import { getPlatePluginOptions, getSlateClass, getRenderElement, getPlatePluginTypes } from '@udecode/plate-core';\nimport { getNodeDeserializer, getParent, insertNodes } from '@udecode/plate-common';\n\nconst ELEMENT_MEDIA_EMBED = 'media_embed';\n\nconst getMediaEmbedDeserialize = (pluginKey = ELEMENT_MEDIA_EMBED) => editor => {\n  const options = getPlatePluginOptions(editor, pluginKey);\n  return {\n    element: getNodeDeserializer({\n      type: options.type,\n      getNode: el => {\n        let url = el.getAttribute('src');\n\n        if (url) {\n          [url] = url.split('?');\n          return {\n            type: options.type,\n            url\n          };\n        }\n      },\n      rules: [{\n        nodeNames: 'IFRAME'\n      }, {\n        className: getSlateClass(options.type)\n      }],\n      ...options.deserialize\n    })\n  };\n};\n\n/**\n * Enables support for embeddable media such as YouTube\n * or Vimeo videos, Instagram posts and tweets or Google Maps.\n */\n\nconst createMediaEmbedPlugin = ({\n  pluginKey = ELEMENT_MEDIA_EMBED\n} = {}) => ({\n  pluginKeys: pluginKey,\n  renderElement: getRenderElement(pluginKey),\n  deserialize: getMediaEmbedDeserialize(pluginKey),\n  voidTypes: getPlatePluginTypes(pluginKey)\n});\n\nconst insertMediaEmbed = (editor, {\n  url = '',\n  pluginKey = ELEMENT_MEDIA_EMBED\n}) => {\n  if (!editor.selection) return;\n  const selectionParentEntry = getParent(editor, editor.selection);\n  if (!selectionParentEntry) return;\n  const [, path] = selectionParentEntry;\n  insertNodes(editor, {\n    type: pluginKey,\n    url,\n    children: [{\n      text: ''\n    }]\n  }, {\n    at: path\n  });\n};\n\nexport { ELEMENT_MEDIA_EMBED, createMediaEmbedPlugin, getMediaEmbedDeserialize, insertMediaEmbed };\n//# sourceMappingURL=index.es.js.map\n","var e=[],t=[];function n(n,r){if(n&&\"undefined\"!=typeof document){var a,s=!0===r.prepend?\"prepend\":\"append\",d=!0===r.singleTag,i=\"string\"==typeof r.container?document.querySelector(r.container):document.getElementsByTagName(\"head\")[0];if(d){var u=e.indexOf(i);-1===u&&(u=e.push(i)-1,t[u]={}),a=t[u]&&t[u][s]?t[u][s]:t[u][s]=c()}else a=c();65279===n.charCodeAt(0)&&(n=n.substring(1)),a.styleSheet?a.styleSheet.cssText+=n:a.appendChild(document.createTextNode(n))}function c(){var e=document.createElement(\"style\");if(e.setAttribute(\"type\",\"text/css\"),r.attributes)for(var t=Object.keys(r.attributes),n=0;n<t.length;n++)e.setAttribute(t[n],r.attributes[t[n]]);var a=\"prepend\"===s?\"afterbegin\":\"beforeend\";return i.insertAdjacentElement(a,e),e}}export default n;\n","import React, {useContext, useEffect, useRef, useState} from 'react'\nimport {ReactEditor} from 'slate-react'\nimport {BaseSelection, Transforms} from 'slate'\nimport {useEventEditorId, useStoreEditorRef, useStoreEditorSelection} from '@udecode/plate-core'\nimport {ModalContext} from '@dreifuss-wysiwyg-editor/common'\nimport {insertMediaEmbed} from '@udecode/plate-media-embed'\nimport {MediaEmbedUrlInput} from '../MediaEmbedElement'\nimport './media-embed-toolbar.css'\n\nconst transformUrl = (newUrl: string) => {\n  // if not starting with http, assume pasting of full iframe embed code\n  if (newUrl.substring(0, 4) !== 'http') {\n    const regexMatchSrc = /src=\".*?\"/\n    const regexGroupQuotes = /\"([^\"]*)\"/\n\n    const src = newUrl.match(regexMatchSrc)?.[0]\n    const returnString = src?.match(regexGroupQuotes)?.[1]\n\n    if (returnString) {\n      newUrl = returnString\n    }\n  }\n  return newUrl\n}\n\nexport const MediaEmbedToolbar = () => {\n  const editor = useStoreEditorRef(useEventEditorId('focus'))\n\n  const selection = useStoreEditorSelection(useEventEditorId('focus'))\n  const latestSelection = useRef<BaseSelection>()\n\n  const [url, setURL] = useState('')\n\n  const {toggleMenu} = useContext(ModalContext)\n\n  useEffect(() => {\n    if (selection) {\n      latestSelection.current = selection\n    }\n  }, [selection])\n\n  return (\n    <form className=\"media-embed-toolbar\">\n      <div className=\"form-group\">\n        <label>Media Embed</label>\n        <div className=\"input-group\">\n          <MediaEmbedUrlInput\n            onChange={(newUrl: string) => setURL(transformUrl(newUrl))}\n            url={url}\n          />\n        </div>\n      </div>\n      <div className=\"toolbar\" role=\"toolbar\">\n        <button\n          className={`${!url ? 'disabled' : 'insert'}`}\n          disabled={!url}\n          onClick={e => {\n            if (!editor) return\n            e.preventDefault()\n\n            Transforms.select(editor, latestSelection.current)\n            ReactEditor.focus(editor)\n\n            insertMediaEmbed(editor, {url})\n\n            toggleMenu()\n          }}>\n          Insert\n        </button>\n        <button\n          className={`${url ? 'cancel' : 'disabled'}`}\n          onClick={e => {\n            e.preventDefault()\n\n            toggleMenu()\n          }}>\n          Remove\n        </button>\n      </div>\n    </form>\n  )\n}\n\nexport default MediaEmbedToolbar\n"],"names":["getMediaEmbedElementStyles","props","createStyles","prefixClassNames","root","iframeWrapper","iframe","input","css","MediaEmbedUrlInput","url","onChange","value","setValue","React","useState","validateUrl","newUrl","substring","regexMatchSrc","regexGroupQuotes","src","match","returnString","_jsx","e","stopPropagation","target","MediaEmbedElement","attributes","children","element","nodeProps","editor","useEditorRef","styles","_jsxs","className","val","path","ReactEditor","findPath","setNodes","at","getParent","insertNodes","transformUrl","MediaEmbedToolbar","useStoreEditorRef","useEventEditorId","selection","useStoreEditorSelection","latestSelection","useRef","setURL","toggleMenu","useContext","ModalContext","useEffect","current","preventDefault","Transforms","select","focus","insertMediaEmbed"],"mappings":"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"}